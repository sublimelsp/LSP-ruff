{
  "contributions": {
    "settings": [
      {
        "file_patterns": [
          "/LSP-ruff.sublime-settings"
        ],
        "schema": {
          "$id": "sublime://settings/LSP-ruff",
          "definitions": {
            "LspRuffSettings": {
              "additionalProperties": false,
              "properties": {
                "args": {
                  "type": "array",
                  "default": [],
                  "markdownDescription": "Custom arguments passed to ruff. See [ruff documentation](https://github.com/charliermarsh/ruff/blob/main/README.md#configuration)."
                },
                "logLevel": {
                  "type": "string",
                  "default": "error",
                  "enum": [
                    "error",
                    "warn",
                    "info",
                    "debug",
                    "off"
                  ],
                  "description": "Sets the tracing level for the extension."
                },
                "path": {
                  "type": "array",
                  "default": [],
                  "description": "Setting to provide custom ruff executables, to try in order."
                },
                "interpreter": {
                  "type": "array",
                  "default": [],
                  "description": "Path to a Python interpreter to use to run the linter server."
                },
                "showNotification": {
                  "type": "string",
                  "default": "off",
                  "description": "Setting to control when a notification is shown."
                },
                "organizeImports": {
                  "type": "boolean",
                  "default": true,
                  "description": "Whether to register Ruff as capable of handling source.organizeImports actions."
                },
                "fixAll": {
                  "type": "boolean",
                  "default": true,
                  "description": "Whether to register Ruff as capable of handling source.fixAll actions."
                }
              },
            },
            "PluginConfig": {
              "properties": {
                "initializationOptions": {
                  "properties": {
                    "settings": {
                      "$ref": "sublime://settings/LSP-ruff#/definitions/LspRuffSettings",
                    },
                    "globalSettings": {
                      "$ref": "sublime://settings/LSP-ruff#/definitions/LspRuffSettings",
                    }
                  }
                }
              }
            }
          },
          "allOf": [
            {
              "$ref": "sublime://settings/LSP-plugin-base"
            },
            {
              "$ref": "sublime://settings/LSP-ruff#/definitions/PluginConfig"
            }
          ]
        }
      },
      {
        "file_patterns": [
          "/*.sublime-project"
        ],
        "schema": {
          "properties": {
            "settings": {
              "properties": {
                "LSP": {
                  "properties": {
                    "LSP-ruff": {
                      "$ref": "sublime://settings/LSP-ruff#/definitions/PluginConfig"
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "file_patterns": [
          "LSP.sublime-settings"
        ],
        "schema": {
          "properties": {
            "lsp_code_actions_on_save": {
              "properties": {
                "source.fixAll.ruff": {
                  "type": "boolean"
                },
                "source.organizeImports.ruff": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    ]
  }
}
